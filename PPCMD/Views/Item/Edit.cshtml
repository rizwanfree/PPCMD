@model PPCMD.Models.Item
@{
    ViewData["Title"] = "Edit Item";
    var dutyTypes = ViewBag.DutyTypes as List<PPCMD.Models.DutyType>;
}

<h1 class="h4 fw-bold mb-4">Edit Item</h1>

<form asp-action="Edit" method="post" class="mb-4" style="max-width: 600px;">
    <input type="hidden" asp-for="ItemID" />

    <div class="mb-3">
        <label asp-for="ItemName" class="form-label">Item Name</label>
        <input asp-for="ItemName" class="form-control" />
        <span asp-validation-for="ItemName" class="text-danger small"></span>
    </div>

    <div class="mb-3">
        <label asp-for="HSCode" class="form-label">HS Code</label>
        <input asp-for="HSCode" class="form-control" />
    </div>

    <button type="submit" class="btn btn-success">
        💾 Save
    </button>
    <a asp-action="Index" class="btn btn-link text-secondary">Back</a>
</form>

<hr class="my-4" />

<h2 class="h5 fw-semibold mb-3">Item Duties</h2>

@if (Model.Duties.Any())
{
    <div class="table-responsive">
        <table id="dutiesTable" class="table table-bordered table-hover table-sm align-middle">
            <thead class="table-light">
                <tr>
                    <th style="width: 40px;">⇅</th>
                    <th>Duty</th>
                    <th>Rate</th>
                    <th>Type</th>
                    <th style="width: 100px;"></th>
                </tr>
            </thead>
            <tbody id="dutyList">
                @foreach (var duty in Model.Duties.OrderBy(d => d.Order))
                {
                    <tr data-id="@duty.Id" style="cursor: move;">
                        <td>⇅</td>
                        <td>@duty.DutyType.Name</td>
                        <td>@duty.Rate</td>
                        <td>@(duty.IsPercentage ? "%" : "Fixed")</td>
                        <td class="text-end"> ... </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p class="text-muted fst-italic">No duties assigned yet.</p>
}

<form asp-action="AddDuty" method="post" class="row g-3 mt-3">
    <input type="hidden" name="itemId" value="@Model.ItemID" />

    <!-- Duty Type -->
    <div class="col-md-4">
        <label class="form-label">Duty Type</label>
        <select name="dutyTypeId" class="form-select">
            @foreach (var dt in dutyTypes)
            {
                <option value="@dt.Id">@dt.Name</option>
            }
        </select>
    </div>

    <!-- Rate -->
    <div class="col-md-3">
        <label class="form-label">Rate</label>
        <input type="number" step="0.01" name="rate" class="form-control" />
    </div>

    <!-- Type -->
    <div class="col-md-3">
        <label class="form-label">Type</label>
        <select name="isPercentage" class="form-select">
            <option value="true">%</option>
            <option value="false">Fixed</option>
        </select>
    </div>

    <!-- Button -->
    <div class="col-md-2 d-flex align-items-end">
        <button type="submit" class="btn btn-primary w-100">
            ➕ Add
        </button>
    </div>
</form>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <script>
        const el = document.getElementById('dutyList');
        new Sortable(el, {
            animation: 150,
            handle: 'td:first-child',
            onEnd: function () {
                let order = [];
                document.querySelectorAll('#dutyList tr').forEach((row, index) => {
                    order.push({ id: row.dataset.id, order: index });
                });

                fetch('@Url.Action("ReorderDuties", "Item")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    body: JSON.stringify(order)
                });
            }
        });
    </script>
}
